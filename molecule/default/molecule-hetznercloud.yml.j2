---

dependency:
  name: galaxy
driver:
  name: hetznercloud
lint: |
  set -e
  yamllint .
  ln -fs molecule/default/requirements.yml
  ansible-lint
  rm -f requirements.yml
platforms:
{% for platform in MOLECULE_DISTROS %}
  - name: keepalived-{{ platform.name }}-master
    server_type: "{{ platform.server_type | default('cx11') }}"
    image: "{{ platform.image }}"
    location: "{{ platform.location | default('hel1') }}"
    groups: ['keepalived_master']
  - name: keepalived-{{ platform.name }}-backup
    server_type: "{{ platform.server_type | default('cx11') }}"
    image: "{{ platform.image }}"
    location: "{{ platform.location | default('hel1') }}"
    groups: ['keepalived_backup']
{% endfor %}
provisioner:
  name: ansible
{% if MOLECULE_ANSIBLE_ARGS is defined %}
  ansible_args:
{% for molecule_ansible_arg in MOLECULE_ANSIBLE_ARGS %}
    - {{ molecule_ansible_arg }}
{% endfor %}
{% endif %}
  env:
    ANSIBLE_PIPELINING: "True"
    ANSIBLE_VERBOSITY: 0
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}
  inventory:
    group_vars: {"linux": {"ansible_user": "vagrant", "ansible_password": "vagrant"}, "windows": {"ansible_user": "vagrant", "ansible_password": "vagrant", "ansible_become_user": "vagrant", "ansible_become_method": "runas", "ansible_connection": "ssh", "ansible_shell_type": "cmd"}}
    host_vars: {}
scenario:
  name: default
verifier:
  name: ansible
